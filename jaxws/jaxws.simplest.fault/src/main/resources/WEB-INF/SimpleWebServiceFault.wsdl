<?xml version="1.0" encoding="UTF-8"?>
<definitions name="SimpleFaultWsdl" targetNamespace="http://api.fault.simplest.jaxws.javaee.learn.toce.cz"
             xmlns:tns="http://api.fault.simplest.jaxws.javaee.learn.toce.cz"
             xmlns="http://schemas.xmlsoap.org/wsdl/"
             xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
             xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
             xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl">
    <!-- xTypes: via XSD-->
    <types>
        <xsd:schema targetNamespace="http://api.fault.simplest.jaxws.javaee.learn.toce.cz" elementFormDefault="qualified">
            <xsd:complexType name="HelloRequestType">
                <xsd:sequence>
                    <xsd:element name="greetings" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="HelloResponseType">
                <xsd:sequence>
                    <xsd:element name="resultCode" type="xsd:string"/>
                    <xsd:element name="resultText" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>           

            <xsd:element name="HelloRuntimeExceptionRequest">
                <xsd:complexType>
                    <xsd:complexContent>
                        <xsd:extension base="tns:HelloRequestType"/>
                    </xsd:complexContent>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="HelloRuntimeExceptionResponse">
                <xsd:complexType>
                    <xsd:complexContent>
                        <xsd:extension base="tns:HelloResponseType"/>
                    </xsd:complexContent>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="HelloCheckedExceptionRequest">
                <xsd:complexType>
                    <xsd:complexContent>
                        <xsd:extension base="tns:HelloRequestType"/>
                    </xsd:complexContent>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="HelloCheckedExceptionResponse">
                <xsd:complexType>
                    <xsd:complexContent>
                        <xsd:extension base="tns:HelloResponseType"/>
                    </xsd:complexContent>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="HelloWebServiceExceptionRequest">
                <xsd:complexType>
                    <xsd:complexContent>
                        <xsd:extension base="tns:HelloRequestType"/>
                    </xsd:complexContent>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="HelloWebServiceExceptionResponse">
                <xsd:complexType>
                    <xsd:complexContent>
                        <xsd:extension base="tns:HelloResponseType"/>
                    </xsd:complexContent>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="HelloSoapFaultExceptionRequest">
                <xsd:complexType>
                    <xsd:complexContent>
                        <xsd:extension base="tns:HelloRequestType"/>
                    </xsd:complexContent>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="HelloSoapFaultExceptionResponse">
                <xsd:complexType>
                    <xsd:complexContent>
                        <xsd:extension base="tns:HelloResponseType"/>
                    </xsd:complexContent>
                </xsd:complexType>
            </xsd:element>        
            <xsd:element name="InternalErrorException">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="message" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:schema>
    </types>
    
    <!-- Messages -->
    <message name="HelloExceptionIn">
        <part name="parameters" element="tns:HelloRuntimeExceptionRequest"/>
    </message>
    <message name="HelloExceptionOut">
        <part name="parameters" element="tns:HelloRuntimeExceptionResponse"/>
    </message>
    <message name="HelloCheckedExceptionIn">
        <part name="parameters" element="tns:HelloCheckedExceptionRequest"/>
    </message>
    <message name="HelloCheckedExceptionOut">
        <part name="parameters" element="tns:HelloCheckedExceptionResponse"/>
    </message>
    <message name="HelloWebServiceExceptionIn">
        <part name="parameters" element="tns:HelloWebServiceExceptionRequest"/>
    </message>
    <message name="HelloWebServiceExceptionOut">
        <part name="parameters" element="tns:HelloWebServiceExceptionResponse"/>
    </message>
    <message name="HelloSoapFaultExceptionIn">
        <part name="parameters" element="tns:HelloSoapFaultExceptionRequest"/>
    </message>
    <message name="HelloSoapFaultExceptionOut">
        <part name="parameters" element="tns:HelloSoapFaultExceptionResponse"/>
    </message>
    <message name="InternalErrorExceptionFault">
        <part name="fault" element="tns:InternalErrorException"/>
    </message>    
    
    <!-- Ports -->
    <portType name="SimpleWebServiceFaultPortType">
        <operation name="helloRuntimeException">
            <documentation>Metoda, kt. pri zpracovani vyhodi runtime exception</documentation>
            <input name="input1" message="tns:HelloExceptionIn"/>
            <output name="output1" message="tns:HelloExceptionOut"/>
        </operation>
        <operation name="helloCheckedException">
            <documentation>Metoda, kt. pri zpracovani vyhodi checked exception - InternalErrorExceptionFault</documentation>
            <input name="input2" message="tns:HelloCheckedExceptionIn"/>
            <output name="output2" message="tns:HelloCheckedExceptionOut"/>
            <fault name="internalErrorException" message="tns:InternalErrorExceptionFault"/>
        </operation>
        <operation name="helloWebServiceException">
            <documentation>Metoda, kt. pri zpracovani vyhodi javax.ws.WebServiceException</documentation>
            <input name="input3" message="tns:HelloWebServiceExceptionIn"/>
            <output name="output3" message="tns:HelloWebServiceExceptionOut"/>
        </operation>
        <operation name="helloSoapFaultException">
            <documentation>Metoda, kt. pri zpracovani vyhodi javax.xml.ws.soap.SOAPFaultException</documentation>
            <input name="input4" message="tns:HelloSoapFaultExceptionIn"/>
            <output name="output4" message="tns:HelloSoapFaultExceptionOut"/>
        </operation>
    </portType>
    
    <!-- Bindings -->
    <binding name="SimpleWebServiceFaultBindingSoap11Http" type="tns:SimpleWebServiceFaultPortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="helloRuntimeException">
            <soap:operation style="document" soapAction=""/>
            <input name="input1"><!-- ukazuje na portType/operation/input[@name]-->
                <soap:body use="literal"/>
            </input>
            <output name="output1"><!-- ukazuje na portType/operation/output[@name]-->
                <soap12:body use="literal"/>
            </output>
        </operation>
        <operation name="helloCheckedException">
            <soap:operation style="document" soapAction="" />
            <input name="input2"><!-- ukazuje na portType/operation/input[@name]-->
                <soap:body use="literal"/>
            </input>
            <output name="output2"><!-- ukazuje na portType/operation/output[@name]-->
                <soap:body use="literal"/>
            </output>
            <fault name="internalErrorException"><!-- ukazuje na portType/operation/fault[@name]-->
                <soap:fault use="literal" name="internalErrorException"/>
            </fault>
        </operation>
        <operation name="helloWebServiceException">
            <soap:operation style="document" soapAction=""/>
            <input name="input3"><!-- ukazuje na portType/operation/input[@name]-->
                <soap:body use="literal"/>
            </input>
            <output name="output3"><!-- ukazuje na portType/operation/output[@name]-->
                <soap12:body use="literal"/>
            </output>
        </operation>
        <operation name="helloSoapFaultException">
            <soap:operation style="document" soapAction=""/>
            <input name="input4"><!-- ukazuje na portType/operation/input[@name]-->
                <soap:body use="literal"/>
            </input>
            <output name="output4"><!-- ukazuje na portType/operation/output[@name]-->
                <soap12:body use="literal"/>
            </output>
        </operation>               
    </binding>
    <binding name="SimpleWebServiceFaultBindingSoap12Http" type="tns:SimpleWebServiceFaultPortType">
        <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="helloRuntimeException">
            <soap12:operation style="document" soapAction="" soapActionRequired="false"/>
            <input name="input1"><!-- ukazuje na portType/operation/input[@name]-->
                <soap12:body use="literal"/>
            </input>
            <output name="output1"><!-- ukazuje na portType/operation/output[@name]-->
                <soap12:body use="literal"/>
            </output>
        </operation>
        <operation name="helloCheckedException">
            <soap12:operation style="document" soapAction="" soapActionRequired="false"/>
            <input name="input2"><!-- ukazuje na portType/operation/input[@name]-->
                <soap12:body use="literal"/>
            </input>
            <output name="output2"><!-- ukazuje na portType/operation/output[@name]-->
                <soap12:body use="literal"/>
            </output>
            <fault name="internalErrorException"><!-- ukazuje na portType/operation/fault[@name]-->
                <soap12:fault use="literal" name="internalErrorException"/>
            </fault>
        </operation>
        <operation name="helloWebServiceException">
            <soap12:operation style="document" soapAction="" soapActionRequired="false"/>
            <input name="input3"><!-- ukazuje na portType/operation/input[@name]-->
                <soap12:body use="literal"/>
            </input>
            <output name="output3"><!-- ukazuje na portType/operation/output[@name]-->
                <soap12:body use="literal"/>
            </output>
        </operation>
        <operation name="helloSoapFaultException">
            <soap:operation style="document" soapAction=""/>
            <input name="input4"><!-- ukazuje na portType/operation/input[@name]-->
                <soap:body use="literal"/>
            </input>
            <output name="output4"><!-- ukazuje na portType/operation/output[@name]-->
                <soap12:body use="literal"/>
            </output>
        </operation>      
    </binding>
    
    <!-- Services -->
    <service name="SimpleWebServiceFault">
        <documentation>Simplest soap fault web service example - to demonstrated soap fault behaviour</documentation>
        <port name="SimpleWebServiceFaultSoap11Http" binding="tns:SimpleWebServiceFaultBindingSoap11Http"><!-- ukazuje na binding[@name]-->
            <documentation>Soap fault example processing via soap 1.1 version</documentation>
            <soap:address location="http://localhost:8080/ws/simplest/fault"/>
        </port>        
        <port name="SimpleWebServiceFaultSoap12Http" binding="tns:SimpleWebServiceFaultBindingSoap12Http"><!-- ukazuje na binding[@name]-->
            <documentation>Soap fault example processing via soap 1.2 version</documentation>
            <soap12:address location="http://localhost:8080/ws/simplest/fault"/>
        </port>
    </service>
</definitions>
